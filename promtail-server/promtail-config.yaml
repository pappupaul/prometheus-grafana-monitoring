server:
  http_listen_port: 9080

positions:
  filename: /tmp/positions.yaml

clients:
  - url: ${LOKI_URL}
    batchwait: 10s          # Wait up to 10s to batch logs
    batchsize: 102400       # Batch size in bytes (100KB)
    backoff_config:
      min_period: 1s
      max_period: 5m
      max_retries: 5
    timeout: 15s

scrape_configs:
  - job_name: ${CONTAINER_NAME}
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ["${CONTAINER_NAME}"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
    pipeline_stages:
      - regex:
          expression: 'trace_id[":= ]+(?P<trace_id>[a-zA-Z0-9\-]+)'
      - match:
          selector: '{trace_id!=""}'
          stages:
            - labels:
                trace_id: trace_id
      - drop:
          source: trace_id
          expression: '^$'
    # pipeline_stages:
    #   - regex:
    #       expression: '^(?P<json_log>\{.*\})$'
    #   - json:
    #       expressions:
    #         trace_id: json_log.trace_id
    #         method: json_log.method
    #         path: json_log.path
    #         status: json_log.status
    #         event: json_log.event
    #         timestamp: json_log.timestamp
    #         logger: json_log.logger
    #         level: json_log.level
    #   - output:
    #       source: .
    #   - match:
    #       selector: '{trace_id!=""}'
    #       stages:
    #         - labels:
    #             trace_id: trace_id
    #             method: method
    #             path: path
    #             status: status
    #             event: event
    #             logger: logger
    #             level: level
      # - drop:
      #     source: trace_id
      #     expression: '^$'